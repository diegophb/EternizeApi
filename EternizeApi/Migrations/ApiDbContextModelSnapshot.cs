// <auto-generated />
using System;
using EternizeApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EternizeApi.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EternizeApi.Models.Cliente", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("id_cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EternizeApi.Models.Destino", b =>
                {
                    b.Property<int>("id_destino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<decimal?>("valor")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_destino");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("EternizeApi.Models.Pacote", b =>
                {
                    b.Property<int>("id_pacote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<decimal?>("valor")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_pacote");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("EternizeApi.Models.Reserva", b =>
                {
                    b.Property<int>("id_reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_reserva")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int");

                    b.Property<decimal?>("valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_reserva");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("PacoteId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("EternizeApi.Models.Reserva", b =>
                {
                    b.HasOne("EternizeApi.Models.Cliente", "cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EternizeApi.Models.Destino", "destino")
                        .WithMany("Reservas")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EternizeApi.Models.Pacote", "pacote")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("destino");

                    b.Navigation("pacote");
                });

            modelBuilder.Entity("EternizeApi.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("EternizeApi.Models.Destino", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("EternizeApi.Models.Pacote", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
